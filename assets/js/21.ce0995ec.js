(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{677:function(t,_,v){"use strict";v.r(_);var i=v(3),s=Object(i.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"详细介绍git"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#详细介绍git"}},[t._v("#")]),t._v(" "),v("a",{attrs:{href:"https://mp.weixin.qq.com/s/Bf7uVhGiu47uOELjmC5uXQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("详细介绍git"),v("OutboundLink")],1)]),t._v(" "),v("h2",{attrs:{id:"git常用命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git常用命令"}},[t._v("#")]),t._v(" git常用命令")]),t._v(" "),v("h3",{attrs:{id:"前言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),v("p",[v("code",[t._v("git")]),t._v("的操作可以通过命令的形式如执行，日常使用就如下图6个命令即可")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://s1.ax1x.com/2022/10/26/xWyjJO.png",alt:"xWyjJO.png"}})]),t._v(" "),v("h3",{attrs:{id:"本地代码版本回退-重点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#本地代码版本回退-重点"}},[t._v("#")]),t._v(" 本地代码版本回退(重点)")]),t._v(" "),v("ol",[v("li",[t._v("git reflog查看历史操作编号")]),t._v(" "),v("li",[t._v("git reset --soft [操作编号] 返回对应的暂存状态，多用于撤销上一步commit，回到原来"),v("strong",[t._v("add之后")]),t._v("的状态")]),t._v(" "),v("li",[t._v("git reset --mixed [操作编号] 返回对应的暂存状态，多用于撤销上一步commit，回到原来"),v("strong",[t._v("add之前")]),t._v("的状态")]),t._v(" "),v("li",[t._v("git reset --hard [操作编号]  返回对应版本，慎用！将会改变和去掉在本地的代码")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://z1.ax1x.com/2023/11/17/pit6NP1.png",alt:"pit6NP1.png"}})]),t._v(" "),v("h3",{attrs:{id:"常用命令有哪些"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常用命令有哪些"}},[t._v("#")]),t._v(" 常用命令有哪些")]),t._v(" "),v("h4",{attrs:{id:"配置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),v("p",[v("code",[t._v("Git")]),t._v("自带一个 "),v("code",[t._v("git config")]),t._v(" 的工具来帮助设置控制 "),v("code",[t._v("Git")]),t._v("外观和行为的配置变量，在我们安装完"),v("code",[t._v("git")]),t._v("之后，第一件事就是设置你的用户名和邮件地址")]),t._v(" "),v("p",[t._v("后续每一个提交都会使用这些信息，它们会写入到你的每一次提交中，不可更改")]),t._v(" "),v("p",[t._v("设置提交代码时的用户信息命令如下：")]),t._v(" "),v("ul",[v("li",[t._v('git config [--global] user.name "[name]"')]),t._v(" "),v("li",[t._v('git config [--global] user.email "[email address]"')])]),t._v(" "),v("h4",{attrs:{id:"启动"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[t._v("#")]),t._v(" 启动")]),t._v(" "),v("p",[t._v("一个"),v("code",[t._v("git")]),t._v("项目的初始有两个途径，分别是：")]),t._v(" "),v("ul",[v("li",[t._v("git init [project-name]：创建或在当前目录初始化一个git代码库")]),t._v(" "),v("li",[t._v("git clone url：下载一个项目和它的整个代码历史")])]),t._v(" "),v("h4",{attrs:{id:"日常基本操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#日常基本操作"}},[t._v("#")]),t._v(" 日常基本操作")]),t._v(" "),v("p",[t._v("在日常工作中，代码常用的基本操作如下：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("git init 初始化仓库，默认为 master 分支")])]),t._v(" "),v("li",[v("p",[t._v("git remote add origin ___")])]),t._v(" "),v("li",[v("p",[t._v("git clone ___")])]),t._v(" "),v("li",[v("p",[t._v("git pull <远程仓库名> <远程分支名> 拉取远程仓库的分支与本地当前分支合并")])]),t._v(" "),v("li",[v("p",[t._v("git pull <远程仓库名> <远程分支名>:<本地分支名> 拉取远程仓库的分支与本地某个分支合并")])]),t._v(" "),v("li",[v("p",[t._v("git status 查看当前分支状态")])]),t._v(" "),v("li",[v("p",[t._v("git diff 查看当前代码 add后，会 add 哪些内容")])]),t._v(" "),v("li",[v("p",[t._v("git add . 提交全部文件修改到缓存区")])]),t._v(" "),v("li",[v("p",[t._v("git add <具体某个文件路径+全名> 提交某些文件到缓存区")])]),t._v(" "),v("li",[v("p",[t._v("git restore --staged "),v("file",[t._v(" 将某文件移除暂存区")])],1)]),t._v(" "),v("li",[v("p",[t._v("git diff --staged查看现在 commit 提交后，会提交哪些内容")])]),t._v(" "),v("li",[v("p",[t._v('git commit -a -m"<注释>" === git add. + git commit -m"<注释>"')])]),t._v(" "),v("li",[v("p",[t._v('git commit -m "<注释>" 提交代码到本地仓库，并写提交注释')])]),t._v(" "),v("li",[v("p",[t._v("git commit -v 提交时显示所有diff信息")])]),t._v(" "),v("li",[v("p",[t._v("git commit --amend [file1][file2] 重做上一次commit，并包括指定文件的新变化")])]),t._v(" "),v("li",[v("p",[t._v("git log查看提交日志和对应的"),v("strong",[t._v("校验和")])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("git log --pretty=oneline")]),t._v(" 优化显示在一行")])]),t._v(" "),v("li",[v("p",[t._v("git log --pretty=oneline --graph")])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://s1.ax1x.com/2022/12/27/zzJdE9.png",alt:"zzJdE9.png"}})]),t._v(" "),v("ul",[v("li",[t._v("​")])]),t._v(" "),v("p",[t._v("关于提交信息的格式，可以遵循以下的规则：")]),t._v(" "),v("ul",[v("li",[t._v("feat: 新特性，添加功能")]),t._v(" "),v("li",[t._v("fix: 修改 bug")]),t._v(" "),v("li",[t._v("refactor: 代码重构")]),t._v(" "),v("li",[t._v("docs: 文档修改")]),t._v(" "),v("li",[t._v("style: 代码格式修改, 注意不是 css 修改")]),t._v(" "),v("li",[t._v("test: 测试用例修改")]),t._v(" "),v("li",[t._v("chore: 其他修改, 比如构建流程, 依赖管理")])]),t._v(" "),v("h4",{attrs:{id:"分支操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分支操作"}},[t._v("#")]),t._v(" 分支操作")]),t._v(" "),v("ul",[v("li",[t._v("分支查看\n"),v("ul",[v("li",[t._v("git branch 查看本地所有分支")]),t._v(" "),v("li",[t._v("git branch -r 查看远程所有分支")]),t._v(" "),v("li",[t._v("git branch -a 查看本地和远程所有分支")])])]),t._v(" "),v("li",[t._v("新建分支\n"),v("ul",[v("li",[t._v("git branch <新分支名> 基于当前分支，新建一个分支")]),t._v(" "),v("li",[t._v("git checkout -b <新分支名> 把基于当前分支新建分支，并切换为这个分支")]),t._v(" "),v("li",[t._v("git checkout --orphan <新分支名> 新建一个空分支（会保留之前分支的所有文件）")])])]),t._v(" "),v("li",[t._v("删除分支\n"),v("ul",[v("li",[t._v("git branch -D <分支名> 删除本地某个分支")]),t._v(" "),v("li",[t._v("git push <远程库名> :<分支名> 删除远程某个分支")]),t._v(" "),v("li",[t._v("git branch <新分支名称> <提交ID> 从提交历史恢复某个删掉的某个分支")])])]),t._v(" "),v("li",[t._v("切换分支\n"),v("ul",[v("li",[t._v("git branch -m <原分支名> <新分支名> 分支更名")]),t._v(" "),v("li",[t._v("git checkout <分支名> 切换到本地某个分支")]),t._v(" "),v("li",[t._v("git checkout <远程库名>/<分支名> 切换到线上某个分支")])])]),t._v(" "),v("li",[t._v("合并分支\n"),v("ul",[v("li",[t._v("git merge origin/<分支名1>  将"),v("strong",[t._v("远程仓库中的分支1代码合并到远程当前所在分支")])]),t._v(" "),v("li",[t._v("git merge --abort 合并分支出现冲突时，取消合并，一切回到合并前的状态")])])])]),t._v(" "),v("h4",{attrs:{id:"远程同步"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#远程同步"}},[t._v("#")]),t._v(" 远程同步")]),t._v(" "),v("p",[t._v("远程操作常见的命令：")]),t._v(" "),v("ul",[v("li",[t._v("git fetch [remote] 下载远程仓库的所有变动")]),t._v(" "),v("li",[t._v("git remote -v 显示所有远程仓库")]),t._v(" "),v("li",[t._v("git pull remote branch 拉取远程仓库的分支与本地当前分支合并")]),t._v(" "),v("li",[t._v("git fetch 获取线上最新版信息记录，不合并")]),t._v(" "),v("li",[t._v("git push remote branch 上传本地指定分支到远程仓库")]),t._v(" "),v("li",[t._v("git push -u origin master\n"),v("ul",[v("li",[t._v("加了参数-u后，以后即可直接用git push代替git push origin master")])])]),t._v(" "),v("li",[t._v("git push --set-upstream origin <新分支1>  创建远程新分支1并推送当前分支代码到新分支1，同时建立与远端分支的关联关系")]),t._v(" "),v("li",[t._v("git push [remote] --force 强行推送当前分支到远程仓库，即使有冲突")]),t._v(" "),v("li",[t._v("git push [remote] --all 推送所有分支到远程仓库")])]),t._v(" "),v("h4",{attrs:{id:"撤销"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#撤销"}},[t._v("#")]),t._v(" 撤销")]),t._v(" "),v("ul",[v("li",[t._v("git checkout [file] 恢复暂存区的指定文件到工作区")]),t._v(" "),v("li",[t._v("git checkout [commit][file] 恢复某个commit的指定文件到暂存区和工作区")]),t._v(" "),v("li",[t._v("git checkout . 恢复暂存区的所有文件到工作区")])]),t._v(" "),v("h5",{attrs:{id:"git丢弃操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git丢弃操作"}},[t._v("#")]),t._v(" "),v("a",{attrs:{href:"https://blog.csdn.net/weixin_44720938/article/details/127726964",target:"_blank",rel:"noopener noreferrer"}},[t._v("git丢弃操作"),v("OutboundLink")],1)]),t._v(" "),v("h5",{attrs:{id:"回退"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#回退"}},[t._v("#")]),t._v(" 回退")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("git通过HEAD指针记录当前版本")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("我们可通过改变HEAD的指向，修改回退版本")]),t._v("：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("git reset --hard HEAD")]),t._v("^回退到上一个版本")]),t._v(" "),v("li",[t._v("git reset --hard HEAD^^回退到上上个版本")]),t._v(" "),v("li",[t._v("git reset --hard HEAD~10回退到前10个版本")]),t._v(" "),v("li",[t._v("**git reset --hard <校验和>**回退到某个校验和对应的版本")])])]),t._v(" "),v("li",[v("p",[t._v("回退后再通过"),v("strong",[t._v("git reflog --pretty=oneline")]),t._v("可查看操作记录拿到包括操作记录在内的校验和")])])]),t._v(" "),v("ul",[v("li",[t._v("git reset [commit] 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变")]),t._v(" "),v("li",[t._v("git reset --hard 重置暂存区与工作区，与上一次commit保持一致")]),t._v(" "),v("li",[t._v("git reset [file] 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变")]),t._v(" "),v("li",[t._v("git revert [commit] 后者的所有变化都将被前者抵消，并且应用到当前分支")])]),t._v(" "),v("blockquote",[v("p",[v("code",[t._v("reset")]),t._v("：真实硬性回滚，目标版本后面的提交记录全部丢失了")]),t._v(" "),v("p",[v("code",[t._v("revert")]),t._v("：同样回滚，这个回滚操作相当于一个提价，目标版本后面的提交记录也全部都有")])]),t._v(" "),v("h4",{attrs:{id:"存储操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#存储操作"}},[t._v("#")]),t._v(" 存储操作")]),t._v(" "),v("p",[t._v("你"),v("strong",[t._v("正在进行项目中某一部分的工作，里面的东西处于一个比较杂乱的状态")]),t._v("，而你想"),v("strong",[t._v("转到其他分支上进行一些工作")]),t._v("，但又"),v("strong",[t._v("不想提交这些杂乱的代码，这时候可以将代码进行存储")])]),t._v(" "),v("ul",[v("li",[t._v("git stash 暂时将未提交的变化移除")]),t._v(" "),v("li",[t._v("git stash pop 取出储藏中最后存入的工作状态进行恢复，会删除储藏")]),t._v(" "),v("li",[t._v("git stash list 查看所有储藏中的工作")]),t._v(" "),v("li",[t._v("git stash apply <储藏的名称> 取出储藏中对应的工作状态进行恢复，不会删除储藏")]),t._v(" "),v("li",[t._v("git stash clear 清空所有储藏中的工作")]),t._v(" "),v("li",[t._v("git stash drop <储藏的名称> 删除对应的某个储藏")])]),t._v(" "),v("h2",{attrs:{id:"git-fetch和git-pull的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git-fetch和git-pull的区别"}},[t._v("#")]),t._v(" git fetch和git pull的区别")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://s1.ax1x.com/2022/10/26/xWhADe.png",alt:"xWhADe.png"}})]),t._v(" "),v("ul",[v("li",[v("p",[t._v("可以看到，"),v("strong",[v("code",[t._v("git fetch")]),t._v("是将远程主机的最新内容拉到本地，用户在检查了以后决定是否合并到工作本机分支中")])])]),t._v(" "),v("li",[v("p",[t._v("而"),v("code",[t._v("git pull")]),t._v(" 则是"),v("strong",[t._v("将远程主机的最新内容拉下来后直接合并")]),t._v("，即："),v("strong",[v("code",[t._v("git pull = git fetch + git merge")]),t._v("，这样可能会产生冲突，需要手动解决")])])]),t._v(" "),v("li",[v("p",[t._v("在我们本地的"),v("code",[t._v("git")]),t._v("文件中对应也存储了"),v("code",[t._v("git")]),t._v("**本地仓库分支的"),v("code",[t._v("commit ID")]),t._v("**和 "),v("strong",[t._v("跟踪的远程分支的"),v("code",[t._v("commit ID")])]),t._v("，对应文件如下：")]),t._v(" "),v("ul",[v("li",[t._v(".git/refs/head/[本地分支]")]),t._v(" "),v("li",[t._v(".git/refs/remotes/[正在跟踪的分支]")])]),t._v(" "),v("p",[t._v("使用 "),v("code",[t._v("git fetch")]),t._v("更新代码，"),v("strong",[t._v("本地的库中"),v("code",[t._v("master")]),t._v("的"),v("code",[t._v("commitID")]),t._v("不变")])]),t._v(" "),v("p",[t._v("但是与**"),v("code",[t._v("git")]),t._v("上面关联的那个"),v("code",[t._v("orign/master")]),t._v("的"),v("code",[t._v("commit ID")]),t._v("发生改变**")]),t._v(" "),v("p",[v("strong",[t._v("这时候我们本地相当于存储了两个代码的版本号，我们还要通过"),v("code",[t._v("merge")]),t._v("去合并这两个不同的代码版本")])])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://s1.ax1x.com/2022/10/26/xWhK8P.png",alt:"xWhK8P.png"}})]),t._v(" "),v("p",[t._v("也就是"),v("code",[t._v("fetch")]),t._v("的时候本地的"),v("code",[t._v("master")]),t._v("没有变化，但是与远程仓关联的那个版本号被更新了，接下来就是"),v("strong",[t._v("在本地"),v("code",[t._v("merge")]),t._v("合并这两个版本号的代码")])]),t._v(" "),v("p",[t._v("相比之下，使用"),v("code",[t._v("git pull")]),t._v("就更加简单粗暴，会将本地的代码更新至远程仓库里面最新的代码版本，如下图：")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://s1.ax1x.com/2022/10/26/xWhQv8.png",alt:"xWhQv8.png"}})]),t._v(" "),v("h3",{attrs:{id:"用法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[t._v("#")]),t._v(" 用法")]),t._v(" "),v("p",[t._v("一般远端仓库里有新的内容更新，当我们需要把新内容下载的时候，就使用到"),v("code",[t._v("git pull")]),t._v("或者"),v("code",[t._v("git fetch")]),t._v("命令")]),t._v(" "),v("h4",{attrs:{id:"fetch"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#fetch"}},[t._v("#")]),t._v(" fetch")]),t._v(" "),v("p",[t._v("例如从远程的"),v("code",[t._v("origin")]),t._v("仓库的"),v("code",[t._v("master")]),t._v("分支下载代码到本地并新建一个"),v("code",[t._v("temp")]),t._v("分支")]),t._v(" "),v("div",{staticClass:"language-git line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-git"}},[v("code",[t._v("git fetch origin master:temp\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("p",[v("strong",[t._v("如果上述没有冒号，则表示将远程"),v("code",[t._v("origin")]),t._v("仓库的"),v("code",[t._v("master")]),t._v("分支拉取下来到本地当前分支")])]),t._v(" "),v("p",[t._v("这里"),v("code",[t._v("git fetch")]),t._v("不会进行合并，执行后需要手动执行"),v("code",[t._v("git merge")]),t._v("合并，如下：")]),t._v(" "),v("div",{staticClass:"language-git line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-git"}},[v("code",[t._v("git merge temp\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("h4",{attrs:{id:"pull"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#pull"}},[t._v("#")]),t._v(" pull")]),t._v(" "),v("p",[t._v("例如将远程主机"),v("code",[t._v("origin")]),t._v("的"),v("code",[t._v("master")]),t._v("分支拉取过来，与本地的"),v("code",[t._v("branchtest")]),t._v("分支合并，命令如下：")]),t._v(" "),v("div",{staticClass:"language-git line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-git"}},[v("code",[t._v("git pull origin master:branchtest\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("p",[t._v("同样如果上述没有冒号，则表示将远程"),v("code",[t._v("origin")]),t._v("仓库的"),v("code",[t._v("master")]),t._v("分支拉取下来与本地当前分支合并")]),t._v(" "),v("h3",{attrs:{id:"区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),v("p",[t._v("相同点：")]),t._v(" "),v("ul",[v("li",[t._v("在作用上他们的功能是大致相同的，都是起到了更新代码的作用")])]),t._v(" "),v("p",[t._v("不同点：")]),t._v(" "),v("ul",[v("li",[t._v("git pull是相当于从远程仓库获取最新版本，然后再与本地分支merge，即"),v("strong",[t._v("git pull = git fetch + git merge")])]),t._v(" "),v("li",[t._v("相比起来，git fetch 更安全也更符合实际要求，在 merge 前，我们可以查看更新情况，根据实际情况再决定是否合并")])]),t._v(" "),v("h2",{attrs:{id:"git拉取项目代码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git拉取项目代码"}},[t._v("#")]),t._v(" git拉取项目代码")]),t._v(" "),v("h3",{attrs:{id:"拉取"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#拉取"}},[t._v("#")]),t._v(" 拉取")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("新建一个文件夹，进入，右键git bash here")])]),t._v(" "),v("li",[v("p",[t._v("执行git init进行初始化")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://z3.ax1x.com/2021/09/23/4wNxht.png",alt:"4wNxht.png"}})])]),t._v(" "),v("li",[v("p",[t._v("创建远程连接：git remote add origin ___")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://z3.ax1x.com/2021/09/23/4warsU.png",alt:"4warsU.png"}})]),t._v(" "),v("p",[v("img",{attrs:{src:"https://z3.ax1x.com/2021/09/23/4wUUgK.png",alt:"4wUUgK.png"}})])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("拉取远程分支到本地")]),t._v("："),v("strong",[t._v("git fetch origin dev")]),t._v(" (dev为远程仓库的分支名)；这里个人建议直接"),v("strong",[t._v("git fetch origin")]),t._v(" 拉取所有存在的远程分支，之后用"),v("strong",[t._v("Sourcetree")]),t._v("的时候会更快乐")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://z3.ax1x.com/2021/09/23/4wdLBF.png",alt:"4wdLBF.png"}})])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("本地创建分支并切换到该分支")]),t._v("："),v("strong",[t._v("git checkout -b zjf")]),t._v("(本地分支名称)")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("拉取远端某个分支的代码到刚才创建的本地分支")]),t._v("(zjf)："),v("strong",[t._v("git pull origin dev")]),t._v("(远程分支名)")])])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://z3.ax1x.com/2021/09/23/4w0lxx.png",alt:"4w0lxx.png"}})]),t._v(" "),v("ol",{attrs:{start:"7"}},[v("li",[v("p",[t._v("现在已经可以在新创建的文件夹下查看到拉取的代码了")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://z3.ax1x.com/2021/09/23/4w0oLT.png",alt:"4w0oLT.png"}})])])]),t._v(" "),v("h3",{attrs:{id:"推送"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#推送"}},[t._v("#")]),t._v(" 推送")]),t._v(" "),v("h4",{attrs:{id:"推送本地仓库远程仓库版本问题报错解决"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#推送本地仓库远程仓库版本问题报错解决"}},[t._v("#")]),t._v(" 推送本地仓库远程仓库版本问题报错解决")]),t._v(" "),v("p",[t._v("Error: **[rejected] main -＞ main (non-fast-forward)**error: failed to push some refs to\nSolution:  "),v("strong",[t._v("git pull origin main --allow-unrelated-histories")])]),t._v(" "),v("div",{staticClass:"language-js line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看变化文件")]),t._v("\ngit status\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加到版本管理")]),t._v("\ngit add "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提交到本地仓库remotes文件夹(版本库)")]),t._v("\ngit commit "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"submit info"')]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拉取远程代码(本地代码拉取远程，同步) 针对分支拉取")]),t._v("\ngit pull origin dev\ngit pull "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("rebase origin dev  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// git push origin失败时使用(如：文件不同步)")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 推送 针对分支推送")]),t._v("\ngit push origin dev\ngit push "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u origin dev\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br"),v("span",{staticClass:"line-number"},[t._v("8")]),v("br"),v("span",{staticClass:"line-number"},[t._v("9")]),v("br"),v("span",{staticClass:"line-number"},[t._v("10")]),v("br"),v("span",{staticClass:"line-number"},[t._v("11")]),v("br"),v("span",{staticClass:"line-number"},[t._v("12")]),v("br")])]),v("ul",[v("li",[t._v("代码取消关联")]),t._v(" "),v("li",[t._v("git remote remove origin")])]),t._v(" "),v("h2",{attrs:{id:"git其他常用命令补充"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git其他常用命令补充"}},[t._v("#")]),t._v(" git其他常用命令补充：")]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("git branch")]),t._v("："),v("strong",[t._v("查看")]),t._v("本地已检出的分支，和查看当前正使用的分支是哪个")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("git branch __")]),t._v("：本地"),v("strong",[t._v("新建该分支")]),t._v("(不切换至该分支)")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("git branch -D __")]),t._v("："),v("strong",[t._v("删除")]),t._v("某个"),v("strong",[t._v("本地分支")])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("git checkout ___")]),t._v("：检出并"),v("strong",[t._v("切换")]),t._v("至"),v("strong",[t._v("已拉取的远程分支")]),t._v("，执行后可git branch查看到")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://z3.ax1x.com/2021/09/23/4wse61.png",alt:"4wse61.png"}})])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("git checkout -b __")]),t._v("：本地"),v("strong",[t._v("新建")]),t._v("一个分支，"),v("strong",[t._v("并切换")]),t._v("至该分支")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://z3.ax1x.com/2021/09/23/4wyS9H.png",alt:"4wyS9H.png"}})])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("git push origin jf:jf")]),t._v("：将jf"),v("strong",[t._v("分支推送到远程")])]),t._v(" "),v("p",[t._v("冒号前面的jf：推送本地的dev分支到远程origin")]),t._v(" "),v("p",[t._v("冒号后面的jf：远程origin没有会自动创建")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("git push origin --delete jf")]),t._v("："),v("strong",[t._v("删除远程仓库")]),t._v("的jf"),v("strong",[t._v("分支")])])])]),t._v(" "),v("h4",{attrs:{id:"更多其他命令不予补充-安利sourcetree-可视化git代码管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#更多其他命令不予补充-安利sourcetree-可视化git代码管理"}},[t._v("#")]),t._v(" 更多其他命令不予补充，安利"),v("a",{attrs:{href:"https://www.sourcetreeapp.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sourcetree"),v("OutboundLink")],1),t._v("，可视化git代码管理")]),t._v(" "),v("h2",{attrs:{id:"github推送数据问题connection-reset-by-20-205-243-166-port-22"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#github推送数据问题connection-reset-by-20-205-243-166-port-22"}},[t._v("#")]),t._v(" github推送数据问题Connection reset by 20.205.243.166 port 22")]),t._v(" "),v("ul",[v("li",[t._v("ping github.com出现")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://s1.ax1x.com/2022/10/26/xWdBuV.png",alt:"xWdBuV.png"}})]),t._v(" "),v("ul",[v("li",[t._v("推送代码出现：Connection reset by 20.205.243.166 port 22")])]),t._v(" "),v("h3",{attrs:{id:"解决方案一"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#解决方案一"}},[t._v("#")]),t._v(" 解决方案一：")]),t._v(" "),v("p",[t._v("切换电脑网络，连接手机wifi进行推送")]),t._v(" "),v("h3",{attrs:{id:"解决方案二"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#解决方案二"}},[t._v("#")]),t._v(" 解决方案二：")]),t._v(" "),v("ul",[v("li",[t._v("C:\\Windows\\System32\\drivers\\etc")]),t._v(" "),v("li",[t._v("HOSTS文件内加上")])]),t._v(" "),v("div",{staticClass:"language-cmd line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("192.30.255.112  github.com git \n185.31.16.184 github.global.ssl.fastly.net\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br")])]),v("ul",[v("li",[t._v("ping github.com")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://s1.ax1x.com/2022/10/26/xWd2C9.png",alt:"xWd2C9.png"}})]),t._v(" "),v("h2",{attrs:{id:"生成ssh密钥"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#生成ssh密钥"}},[t._v("#")]),t._v(" "),v("a",{attrs:{href:"https://blog.csdn.net/qq_35495339/article/details/92847819?ops_request_misc=&request_id=&biz_id=102&utm_term=ssh-keygen%20-t%20rsa%E7%94%9F%E6%88%90%20github&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-92847819.142%5Ev60%5Epc_search_tree,201%5Ev3%5Eadd_ask,213%5Ev1%5Econtrol&spm=1018.2226.3001.4187",target:"_blank",rel:"noopener noreferrer"}},[t._v("生成ssh密钥"),v("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=s.exports}}]);